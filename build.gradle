plugins {
    id 'java'
}

wrapper {
    gradleVersion = "8.7"
}

group 'org.example'
version '1.0-SNAPSHOT'

def allureVersion = "2.26.0"
def cucumberVersion = "7.16.1"
def aspectJVersion = "1.9.22"

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.compilerArgs.add("-parameters")
}

configurations {
    agent {
        canBeResolved = true
        canBeConsumed = true
    }
}

dependencies {
    agent "org.aspectj:aspectjweaver:$aspectJVersion"

    implementation 'org.jetbrains:annotations:23.0.0'
    implementation 'org.projectlombok:lombok:1.18.22'
    testImplementation 'org.projectlombok:lombok:1.18.22'
    testImplementation 'org.projectlombok:lombok:1.18.22'

    testImplementation platform("io.cucumber:cucumber-bom:$cucumberVersion")
    testImplementation "io.cucumber:cucumber-java"
    testImplementation "io.cucumber:cucumber-junit-platform-engine"

    testImplementation platform("io.qameta.allure:allure-bom:$allureVersion")
    testImplementation "io.qameta.allure:allure-cucumber7-jvm"
    testImplementation "io.qameta.allure:allure-junit-platform"

    testImplementation platform("org.junit:junit-bom:5.10.2")
    testImplementation "org.junit.platform:junit-platform-suite"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"

    testImplementation "org.slf4j:slf4j-simple:2.0.12"

    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '5.4.0'

    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.1'
    implementation group: 'org.assertj', name: 'assertj-core', version: '3.16.1'
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

test {
    ignoreFailures = true
    useJUnitPlatform()
    jvmArgs = [ "-javaagent:${configurations.agent.singleFile}" ]
}